package pt.ipbeja.po2.chartracer.model;

import java.util.*;

/**
 * class to get information about a file
 *
 * @author Gabriel Alexandre Teixeira Gomes
 * @version 2022-06-22
 */
public class OrderCities implements Comparable<OrderCities>{
    private final int year;
    private final String cityName;
    private final int nPopulation;
    private final String country;
    private final String continent;
    public static String[][] cities = BarchartModel.readFileToStringArray2D("datafiles/cities.txt", ",");

    /**
     * compares populations sizes
     *
     * @param   temp    object to be compared
     * @returns         int value with the result of the comparation
     */
    public int compareTo(OrderCities temp) {
        if(this.getnPopulation() == temp.getnPopulation()) return 0;
        else if(this.getnPopulation() > temp.getnPopulation()) return 1;
        else return -1;
    }

    /**
     * constructor of the class
     *
     * @param   year            int value of a specific year
     * @param   cityName        string with a specific city name
     * @param   country         string with a specific country
     * @param   nPopulation     int value of a specific country population
     * @param   continent       string with a specific continent
     */
    public OrderCities(int year, String cityName, String country, int nPopulation, String continent){
        this.year = year;
        this.cityName = cityName;
        this.nPopulation = nPopulation;
        this.continent = continent;
        this.country = country;
    }

    /**
     * returns the variable value
     * @returns     variable value
     */
    public int getYear() {
        return year;
    }
    /**
     * returns the variable value
     * @returns     variable value
     */
    public String getCityName() {
        return cityName;
    }
    /**
     * returns the variable value
     * @returns     variable value
     */
    public int getnPopulation() {
        return nPopulation;
    }
    /**
     * returns the variable value
     * @returns     variable value
     */
    public String getCountry() {
        return country;
    }
    /**
     * returns the variable value
     * @returns     variable value
     */
    public String getContinent() {
        return continent;
    }

    /**
     * compares strings based on the content of the string
     *
     * @returns     if not matched returns false, else returns true
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        OrderCities that = (OrderCities) o;
        return year == that.year && nPopulation == that.nPopulation && cityName.equals(that.cityName) && country.equals(that.country) && continent.equals(that.continent);
    }

    /**
     * triggers a linear search
     *
     * @returns     an integer value, generated by a hashing algorithm
     */
    @Override
    public int hashCode() {
        return Objects.hash(year, cityName, nPopulation, country, continent);
    }

    /**
     * sorts a year by the number of population
     *
     * @param   year    the year to sort
     * @return          arraylist with the year sorted
     */
    public static ArrayList<OrderCities> orderYearByPopulation(int year){
        ArrayList<OrderCities> orderByCityPopulation = new ArrayList<OrderCities>();
        orderByCityPopulation.clear();
        int yearLine = YearInfo.getYearLine(year);
        for (int k = yearLine; k < yearLine+12; k++) {
            orderByCityPopulation.add(new OrderCities(year, cities[k][1], cities[k][2], Integer.parseInt(cities[k][3]), cities[k][4]));
        }
        Collections.sort(orderByCityPopulation, Comparator.reverseOrder());
        return orderByCityPopulation;
    }

    /**
     * print a certain sorted arraylist
     *
     * @param   arrayListToPrint    the array list to print
     */
    public static void printOrdered(ArrayList<OrderCities> arrayListToPrint) {
        System.out.println("Cities after sorting : ");
        for (OrderCities test: arrayListToPrint)
        {
            System.out.println(test.getYear() + " " +
                    test.getCityName() + " " +
                    test.getCountry() + " " +
                    test.getnPopulation() + " " +
                    test.getContinent());
        }
    }
}


